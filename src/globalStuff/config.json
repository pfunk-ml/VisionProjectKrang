// Configuration File
//
// This file is used by camProcess and camCentralProcessMain
// 

// ### Adding new object to the scene ###
// Make changes to: num_object, object_name, marker_id, T_sprite

// These are configuration parametes that are used by camera processes and central process.
{
	// Number of cameras used
	"num_cameras" : 7,
	
	// Number of tags
	"num_objects" : 5,
	
	// Object names. The pose data for markers is sent in same order on the
    // ACH channel
    // first should always be "robot"
	"object_name" : ["robot", "table", "chair1", "chair2", "sqTable"],
	
	// Marker IDs (in same order as object names)
    // first one should always be marker id of robot (krang)
	"marker_id" : [2, 6, 5, 3, 4],

    // Length of edge of AR marker in cms
	//"marker_size" : 20.32,
    "marker_size" : 19.95,
    
    // Length of edge of AR markers used for extrinsic calibration in cms
    "calibration_marker_size" : 26.3,

    // Set resolution in pixels. Some of possible values are 640x480, 960x720 
    // and others.
    "width" : 640,
    "height" : 480,

	// Calibration files for camera processes
	"cam_calib_name" : ["Data/camCalib0.xml",
	                    "Data/camCalib1.xml",
	                    "Data/camCalib2.xml",
	                    "Data/camCalib3.xml",
                      "Data/camCalib4.xml",
                      "Data/camCalib5.xml"],

	// Camera channel names for camera processes to publish data
	"cam_channel_name" : ["cam0_channel",  // CAM ID 0
	                      "cam1_channel",  // CAM ID 1
	                      "cam2_channel",  // CAM ID 2
	                      "cam3_channel",  // CAM ID 3
                        "cam4_channel",  // CAM ID 4
                        "cam5_channel"], // CAM ID 5

	// Perception channel name
	// "perception_channel" : "krang_vision",
    "vision_obj_poses_channel" : "vision_obj_poses",
    "vision_krang_pose_channel" : "vision_krang_pose",

	
	// Debug channel name
	"debug_channel" : "debug_channel",

// Global to camera transformation matrices (pose of global frame in camera 
//  frame). x, y, z in last column are in cms.
"T_global2cam" : // i.e T_cam_global]
[
   [   // camera 0
       [0.998004, -0.024606, -0.058164, 95.285097] ,
       [-0.005039, -0.949065, 0.315037, 176.552808] ,
       [-0.062953, -0.314115, -0.947295, 259.005099] ,
       [0.000000, 0.000000, 0.000000, 1.000000] 
   ],
   [   // camera 1
       [0.999528, 0.019637, 0.023639, -76.898333] ,
       [0.011898, -0.956506, 0.291469, 185.948137] ,
       [0.028334, -0.291050, -0.956288, 257.103327] ,
       [0.000000, 0.000000, 0.000000, 1.000000] 
   ],
   [   // camera 2
       [0.997147, 0.018932, -0.073071, 90.068700] ,
       [0.012172, -0.995696, -0.091873, 62.572600] ,
       [-0.074496, 0.090722, -0.993086, 170.470000] ,
       [0.000000, 0.000000, 0.000000, 1.000000] 
   ],
   [   // camera 3
       [0.998670, -0.012242, 0.050075, -71.895200] ,
       [-0.004617, -0.988728, -0.149649, 60.386500] ,
       [0.051342, 0.149219, -0.987470, 175.386000] ,
       [0.000000, 0.000000, 0.000000, 1.000000] 
   ],
   [   // camera 4
       [0.999966, 0.007215, 0.003940, 79.375400] ,
       [0.008218, -0.888984, -0.457865, -58.167400] ,
       [0.000199, 0.457882, -0.889013, 237.518000] ,
       [0.000000, 0.000000, 0.000000, 1.000000] 
   ],
   [   // camera 5
       [0.999984, 0.002469, 0.005113, -67.926100] ,
       [0.004223, -0.925334, -0.379130, -82.974400] ,
       [0.003795, 0.379145, -0.925329, 229.783000] ,
       [0.000000, 0.000000, 0.000000, 1.000000] 
   ],
   [   // camera 6
       [0.999748, 0.022374, -0.002164, -13.077039] ,
       [0.022108, -0.996087, -0.085555, 302.293695] ,
       [-0.004070, 0.085485, -0.996331, 177.810668] ,
       [0.000000, 0.000000, 0.000000, 1.000000] 
   ]
],

    /* World Customization */

    // Transform from world origin to global origin (pose of global frame 
    // origin relative to world origin). The global origin corresponds to pose
    // of global marker used during extrinsic camera calibration. This is used to 
    // transform marker poses reported by each camera to pose in world frame.
    // x, y, z in last column are in meters.
    "T_global2world" : 
    [
        [1, 0, 0, 2.695],
        [0, 1, 0, 3.2425],
        [0, 0, 1, 0],
        [0, 0, 0, 1]
    ],

	// Pose of object in the marker frame. Once the markers are fixed to the
    // object, these matrices need to be configured. These are used to get 
    // object pose from marker pose. Object frame is defined by 2D object model
    // used in the simulator.
    // x, y, z in last column are in meters.
    "T_sprite" : 
    [
	    [ 
          [1, 0, 0, 0.18],  
	        [0, 1, 0, -0.02],
	        [0, 0, 1, 0],
	        [0, 0, 0, 1] 
      ],	// Robot
	    [ 
          [0, -1, 0, 0.30],  
	        [1, 0, 0, -0.91],
	        [0, 0, 1, 0],
	        [0, 0, 0, 1] 
      ],	// Table
	    [ 
          [0, -1, 0, 0.3],  // [0, -1, 0, 0.50] <-- bubble-back boomdp model
	        [1, 0, 0, -0.24],  // [1, 0, 0, -0.25] <-- bubble-back boomdp model
	        [0, 0, 1, 0],
	        [0, 0, 0, 1] 
      ],	// Chair
      [ 
          [0, -1, 0, 0.3],  // [0, -1, 0, 0.50] <-- bubble-back boomdp model
	        [1, 0, 0, -0.24],  // [1, 0, 0, -0.25] <-- bubble-back boomdp model
          [0, 0, 1, 0],
          [0, 0, 0, 1] 
      ],   // Chair
      [ 
          [0, -1, 0, 0.43],  
          [1, 0, 0, -0.43],
          [0, 0, 1, 0],
          [0, 0, 0, 1] 
      ]  // sqTable
    ]
}
